var searchArray = function (arrayToSearch, query) {

    // if(arrayToSearch.filter( a => a.length !=2).length > 0) {
    //     throw Error
    // }

    for (const a of arrayToSearch) {

        if(a.length !==2 || !Array.isArray(a)) {
            throw Error
        }

    }
    if ( !Array.isArray(query) || query.length !==2) {
        throw Error
    }


    for (let i = 0; i < arrayToSearch.length; i++) {
        if (query.every((e , ind) => e == arrayToSearch[i][ind])) {
            console.log( arrayToSearch[i] ,query   , i)

            return i;
        }
    }
    console.log( arrayToSearch ,query   , -1)
    return -1;
}

describe("Tests", () => {
    it("test", () => {
        // var bigArray = [[2, 3], [7, 2], [9, 20], [1, 2], [7, 2], [45, 4], [7, 87], [4, 5], [2, 7], [6, 32]];
        //
        // var searchFor = [9, 20];
        // expect(searchArray(bigArray, searchFor)).toEqual(2);
        // searchFor = [1, 12];
        // expect(searchArray(bigArray, searchFor)).toEqual(-1);
        // searchFor = [7, 2];
        // expect(searchArray(bigArray, searchFor)).toEqual(1);


       // var arrayToSearch = [[1,2],[3,4],[5,6],[7,8,9]]; // => throw Error
       // expect(searchArray(arrayToSearch, [9, 20])).toThrowError();

        // expect(searchArray( [
        //     [ 9, 4 ],   [ 10, 5 ],  [ 12, 7 ],  [ 2, 9 ],   [ 8, 8 ],  [ 14, 7 ],
        //     [ 7, 12 ],  [ 14, 14 ], [ 4, 9 ],   [ 13, 8 ],  [ 3, 7 ],  [ 14, 10 ],
        //     [ 8, 11 ],  [ 6, 11 ],  [ 15, 13 ], [ 12, 6 ],  [ 13, 9 ], [ 12, 5 ],
        //     [ 12, 12 ], [ 13, 13 ], [ 13, 15 ], [ 15, 12 ], [ 15, 4 ], [ 1, 3 ],
        //     [ 1, 1 ],   [ 12, 2 ],  [ 6, 10 ],  [ 7, 12 ],  [ 6, 13 ], [ 2, 10 ],
        //     [ 1, 4 ],   [ 9, 5 ],   [ 3, 14 ],  [ 5, 5 ],   [ 8, 11 ], [ 6, 7 ],
        //     [ 4, 4 ],   [ 15, 14 ], [ 12, 1 ],  [ 13, 2 ],  [ 12, 5 ], [ 6, 14 ],
        //     [ 4, 1 ],   [ 1, 8 ],   [ 6, 8 ],   [ 6, 4 ],   [ 7, 13 ], [ 14, 1 ],
        //     [ 15, 8 ],  [ 7, 15 ],  [ 7, 6 ],   [ 14, 5 ],  [ 10, 8 ], [ 10, 15 ],
        //     [ 1, 7 ],   [ 12, 8 ],  [ 2, 6 ],   [ 4, 14 ],  [ 8, 15 ], [ 7, 12 ],
        //     [ 7, 3 ],   [ 15, 6 ],  [ 4, 4 ],   [ 4, 6 ],   [ 3, 3 ],  [ 11, 8 ],
        //     [ 6, 10 ],  [ 3, 13 ],  [ 10, 15 ], [ 11, 9 ],  [ 7, 6 ],  [ 3, 9 ],
        //     [ 13, 15 ], [ 11, 11 ], [ 15, 15 ], [ 3, 12 ],  [ 5, 3 ],  [ 15, 6 ],
        //     [ 7, 8 ],   [ 6, 7 ],   [ 6, 9 ],   [ 10, 11 ], [ 1, 2 ],  [ 2, 10 ],
        //     [ 8, 5 ],   [ 10, 14 ], [ 8, 6 ],   [ 15, 3 ],  [ 12, 6 ], [ 10, 11 ],
        //     [ 6, 15 ],  [ 13, 7 ],  [ 9, 2 ],   [ 14, 1 ],  [ 6, 10 ], [ 2, 15 ],
        //     [ 15, 5 ],  [ 10, 5 ],  [ 10, 6 ],  [ 8, 2 ]
        // ],  [ 9, 13 ])).toEqual(16) ;


        expect(searchArray( [
                [ 5, 8 ],   [ 9, 13 ],  [ 5, 15 ],  [ 9, 8 ],   [ 14, 9 ],  [ 15, 11 ],
                [ 6, 14 ],  [ 9, 6 ],   [ 7, 3 ],   [ 5, 4 ],   [ 6, 6 ],   [ 9, 12 ],
                [ 14, 14 ], [ 12, 13 ], [ 12, 10 ], [ 3, 5 ],   [ 8, 9 ],   [ 4, 3 ],
                [ 8, 15 ],  [ 15, 3 ],  [ 15, 8 ],  [ 13, 10 ], [ 13, 6 ],  [ 5, 9 ],
                [ 2, 14 ],  [ 4, 15 ],  [ 14, 7 ],  [ 14, 13 ], [ 15, 9 ],  [ 11, 15 ],
                [ 6, 4 ],   [ 10, 8 ],  [ 10, 1 ],  [ 5, 8 ],   [ 11, 9 ],  [ 6, 6 ],
                [ 11, 10 ], [ 12, 9 ],  [ 6, 1 ],   [ 9, 13 ],  [ 10, 4 ],  [ 3, 4 ],
                [ 11, 4 ],  [ 10, 12 ], [ 9, 10 ],  [ 10, 4 ],  [ 14, 5 ],  [ 14, 8 ],
                [ 11, 1 ],  [ 6, 10 ],  [ 7, 7 ],   [ 4, 13 ],  [ 12, 4 ],  [ 15, 1 ],
                [ 5, 8 ],   [ 11, 12 ], [ 13, 10 ], [ 3, 14 ],  [ 6, 3 ],   [ 1, 5 ],
                [ 10, 14 ], [ 3, 13 ],  [ 1, 11 ],  [ 2, 13 ],  [ 15, 15 ], [ 9, 3 ],
                [ 15, 11 ], [ 7, 6 ],   [ 11, 10 ], [ 13, 12 ], [ 12, 2 ],  [ 15, 11 ],
                [ 13, 10 ], [ 1, 15 ],  [ 3, 12 ],  [ 9, 2 ],   [ 10, 13 ], [ 9, 8 ],
                [ 1, 13 ],  [ 13, 5 ],  [ 1, 15 ],  [ 2, 8 ],   [ 1, 11 ],  [ 4, 6 ],
                [ 6, 2 ],   [ 7, 4 ],   [ 11, 5 ],  [ 15, 14 ], [ 7, 12 ],  [ 4, 2 ],
                [ 10, 7 ],  [ 8, 10 ],  [ 14, 5 ],  [ 4, 9 ],   [ 2, 6 ],   [ 11, 10 ],
                [ 7, 4 ],   [ 2, 12 ],  [ 13, 4 ],  [ 15, 7 ]
        ]
        ,  [ 8, 2 ])).toEqual(-1)

// TODO: add your own tests
    });
});

//https://www.codewars.com/kata/5783ef69202c0ee4cb000265/train/javascript
